[{"E:\\Code\\tasty\\client\\src\\index.tsx":"1","E:\\Code\\tasty\\client\\src\\reportWebVitals.ts":"2","E:\\Code\\tasty\\client\\src\\App.tsx":"3","E:\\Code\\tasty\\client\\src\\lib\\Client.ts":"4","E:\\Code\\tasty\\client\\src\\components\\Header.tsx":"5","E:\\Code\\tasty\\client\\src\\components\\Page.tsx":"6","E:\\Code\\tasty\\client\\src\\ClientContext.ts":"7","E:\\Code\\tasty\\client\\src\\components\\Status.tsx":"8","E:\\Code\\tasty\\client\\src\\components\\Quotes.tsx":"9","E:\\Code\\tasty\\client\\src\\components\\Actives.tsx":"10"},{"size":467,"mtime":1611535006408,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1611242797025,"results":"13","hashOfConfig":"12"},{"size":972,"mtime":1611781435826,"results":"14","hashOfConfig":"12"},{"size":6310,"mtime":1612079712768,"results":"15","hashOfConfig":"12"},{"size":1992,"mtime":1611367209611,"results":"16","hashOfConfig":"12"},{"size":6694,"mtime":1612080475405,"results":"17","hashOfConfig":"12"},{"size":187,"mtime":1611535006408,"results":"18","hashOfConfig":"12"},{"size":1947,"mtime":1611703743013,"results":"19","hashOfConfig":"12"},{"size":2426,"mtime":1611619947992,"results":"20","hashOfConfig":"12"},{"size":8140,"mtime":1612079420100,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13c8arn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Code\\tasty\\client\\src\\index.tsx",[],["45","46"],"E:\\Code\\tasty\\client\\src\\reportWebVitals.ts",[],"E:\\Code\\tasty\\client\\src\\App.tsx",[],"E:\\Code\\tasty\\client\\src\\lib\\Client.ts",["47","48","49","50"],"E:\\Code\\tasty\\client\\src\\components\\Header.tsx",["51"],"import * as React from 'react';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\ninterface props {\r\n    login: (username:string, password:string) => void;\r\n}\r\n\r\nexport class Header extends React.Component<props> {\r\n\r\n    private username: string = '';\r\n    private password: string = '';\r\n\r\n    updateUsername = (ev: any) => {\r\n        this.username = ev.target.value;\r\n    }\r\n    updatePassword = (ev: any) => {\r\n        this.password = ev.target.value;\r\n    }\r\n\r\n    render() {\r\n        let click: any = () => {\r\n            this.props.login(this.username, this.password);\r\n        }\r\n        \r\n        return <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">Tasty Tool</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    {/* \r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n            </NavDropdown>\r\n          */}\r\n                </Nav>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" no-autocomplete placeholder=\"username\" className=\"mr-sm-2\" onChange={this.updateUsername} />\r\n                    <FormControl type=\"password\" className=\"mr-sm-2\" onChange={this.updatePassword} />\r\n                    <Button variant=\"outline-success\" onClick={click}>Login</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    }\r\n}","E:\\Code\\tasty\\client\\src\\components\\Page.tsx",["52","53","54","55"],"E:\\Code\\tasty\\client\\src\\ClientContext.ts",[],"E:\\Code\\tasty\\client\\src\\components\\Status.tsx",["56","57","58","59"],"import * as React from 'react';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Badge } from 'react-bootstrap';\r\nimport { ClientContext } from '../ClientContext';\r\nimport { Client, ClientEvents } from '../lib/Client';\r\n\r\ninterface State {\r\n    isConnected: boolean;\r\n    loggedInToTw: boolean;\r\n}\r\n\r\ninterface Props {\r\n    freeze: (check:boolean) => void;\r\n}\r\n\r\nexport class Status extends React.Component<Props, State> {\r\n    static contextType = ClientContext;\r\n    state: State = {\r\n        isConnected: false,\r\n        loggedInToTw: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const client: Client = this.context;\r\n        client.on(ClientEvents.connectedToServer, () => {\r\n            this.setState({ isConnected: true });\r\n        });\r\n        client.on(ClientEvents.disconnectedFromServer, () => {\r\n            this.setState({ isConnected: false });\r\n        });\r\n        client.on(ClientEvents.loggedIn, () => {\r\n            this.setState({ loggedInToTw: true });\r\n        });\r\n        this.setState({ isConnected: client.connected() });\r\n    }\r\n\r\n    render() {\r\n        const connectedColor = this.state.isConnected ? \"success\" : \"danger\";\r\n        const connectedMsg = this.state.isConnected ? \"Connected\" : \"Disconnected\";\r\n\r\n        const loggedInColor = this.state.loggedInToTw ? \"success\" : \"danger\";\r\n        const loggedInMsg = this.state.loggedInToTw ? \"TW\" : \"TW\";\r\n\r\n        return <Navbar bg=\"light\">\r\n            <Form inline>\r\n                <Badge variant={connectedColor}>{connectedMsg}</Badge>&nbsp;\r\n            <Badge variant={loggedInColor}> {loggedInMsg}</Badge>&nbsp;\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Freeze\" onClick={e=> {\r\n                        return this.props.freeze((e.target as any).checked);\r\n                    }}/>\r\n                </Form.Group>\r\n            </Form>\r\n        </Navbar>\r\n    }\r\n}","E:\\Code\\tasty\\client\\src\\components\\Quotes.tsx",["60","61","62","63","64","65","66"],"E:\\Code\\tasty\\client\\src\\components\\Actives.tsx",["67","68","69","70","71","72","73","74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":43,"column":12,"nodeType":"86","messageId":"87","endLine":43,"endColumn":16,"fix":"88"},{"ruleId":"80","severity":1,"message":"89","line":76,"column":15,"nodeType":"82","messageId":"83","endLine":76,"endColumn":20},{"ruleId":"80","severity":1,"message":"90","line":105,"column":15,"nodeType":"82","messageId":"83","endLine":105,"endColumn":18},{"ruleId":"80","severity":1,"message":"91","line":2,"column":23,"nodeType":"82","messageId":"83","endLine":2,"endColumn":34},{"ruleId":"80","severity":1,"message":"92","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":16},{"ruleId":"80","severity":1,"message":"93","line":7,"column":31,"nodeType":"82","messageId":"83","endLine":7,"endColumn":42},{"ruleId":"80","severity":1,"message":"94","line":36,"column":15,"nodeType":"82","messageId":"83","endLine":36,"endColumn":23},{"ruleId":"80","severity":1,"message":"95","line":134,"column":15,"nodeType":"82","messageId":"83","endLine":134,"endColumn":23},{"ruleId":"80","severity":1,"message":"96","line":2,"column":18,"nodeType":"82","messageId":"83","endLine":2,"endColumn":21},{"ruleId":"80","severity":1,"message":"91","line":2,"column":23,"nodeType":"82","messageId":"83","endLine":2,"endColumn":34},{"ruleId":"80","severity":1,"message":"97","line":2,"column":42,"nodeType":"82","messageId":"83","endLine":2,"endColumn":53},{"ruleId":"80","severity":1,"message":"98","line":2,"column":55,"nodeType":"82","messageId":"83","endLine":2,"endColumn":61},{"ruleId":"80","severity":1,"message":"99","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"100","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":25},{"ruleId":"80","severity":1,"message":"101","line":2,"column":27,"nodeType":"82","messageId":"83","endLine":2,"endColumn":30},{"ruleId":"80","severity":1,"message":"102","line":2,"column":32,"nodeType":"82","messageId":"83","endLine":2,"endColumn":35},{"ruleId":"80","severity":1,"message":"103","line":2,"column":37,"nodeType":"82","messageId":"83","endLine":2,"endColumn":43},{"ruleId":"80","severity":1,"message":"97","line":2,"column":45,"nodeType":"82","messageId":"83","endLine":2,"endColumn":56},{"ruleId":"80","severity":1,"message":"98","line":2,"column":58,"nodeType":"82","messageId":"83","endLine":2,"endColumn":64},{"ruleId":"80","severity":1,"message":"104","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":33},{"ruleId":"105","severity":1,"message":"106","line":50,"column":34,"nodeType":"107","messageId":"108","endLine":50,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":50,"column":56,"nodeType":"111","messageId":"87","endLine":50,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":50,"column":79,"nodeType":"107","messageId":"108","endLine":50,"endColumn":81},{"ruleId":"80","severity":1,"message":"112","line":62,"column":15,"nodeType":"82","messageId":"83","endLine":62,"endColumn":23},{"ruleId":"80","severity":1,"message":"113","line":87,"column":23,"nodeType":"82","messageId":"83","endLine":87,"endColumn":29},{"ruleId":"80","severity":1,"message":"112","line":94,"column":15,"nodeType":"82","messageId":"83","endLine":94,"endColumn":23},{"ruleId":"80","severity":1,"message":"114","line":127,"column":28,"nodeType":"82","messageId":"83","endLine":127,"endColumn":44},{"ruleId":"80","severity":1,"message":"112","line":195,"column":15,"nodeType":"82","messageId":"83","endLine":195,"endColumn":23},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'resolve' is defined but never used.","Identifier","unusedVar","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"117","text":"118"},"'start' is assigned a value but never used.","'end' is assigned a value but never used.","'NavDropdown' is defined but never used.","'Quotes' is defined but never used.","'OrderStatus' is defined but never used.","'accounts' is assigned a value but never used.","'response' is assigned a value but never used.","'Nav' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Navbar' is defined but never used.","'OrderStatusNotification' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'duration' is assigned a value but never used.","'cached' is assigned a value but never used.","'lastTradeSeconds' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1468,1479],""]