// Generated by https://quicktype.io
// Generated by https://quicktype.io

export interface OrderStream {
    type:      string;
    data:      Order;
    timestamp: number;
}

export enum OrderStatus {
    cancelled = "Cancelled",
    filled = "Filled",
    received = "Received",
    unknown = "Unknown",
}

export interface Order {
    id:                           number;
    "account-number":             string;
    "time-in-force":              string;
    "order-type":                 string;
    size:                         number;
    "underlying-symbol":          string;
    "underlying-instrument-type": string;
    price:                        string;
    "price-effect":               string;
    status:                       OrderStatus;
    cancellable:                  boolean;
    "cancelled-at":               string;
    editable:                     boolean;
    edited:                       boolean;
    "ext-exchange-order-number":  string;
    "ext-client-order-id":        string;
    "ext-global-order-number":    number;
    "received-at":                string;
    "updated-at":                 number;
    "terminal-at":                string;
    legs:                         Leg[];
}

export interface Leg {
    "instrument-type":    string;
    symbol:               string;
    quantity:             number;
    "remaining-quantity": number;
    action:               string;
    fills:                any[];
}



export interface OrderResponse {
    order: Order;
    warnings: Warning[];
    "buying-power-effect": BuyingPowerEffect;
    "fee-calculation": FeeCalculation;
}

export interface BuyingPowerEffect {
    "change-in-margin-requirement": string;
    "change-in-margin-requirement-effect": string;
    "change-in-buying-power": string;
    "change-in-buying-power-effect": string;
    "current-buying-power": string;
    "current-buying-power-effect": string;
    "new-buying-power": string;
    "new-buying-power-effect": string;
    "isolated-order-margin-requirement": string;
    "isolated-order-margin-requirement-effect": string;
    "is-spread": boolean;
    impact: string;
    effect: string;
}

export interface FeeCalculation {
    "regulatory-fees": string;
    "regulatory-fees-effect": string;
    "clearing-fees": string;
    "clearing-fees-effect": string;
    commission: string;
    "commission-effect": string;
    "proprietary-index-option-fees": string;
    "proprietary-index-option-fees-effect": string;
    "total-fees": string;
    "total-fees-effect": string;
}

export interface Order {
    id: number;
    "account-number": string;
    "time-in-force": string;
    "order-type": string;
    size: number;
    "underlying-symbol": string;
    "underlying-instrument-type": string;
    price: string;
    "price-effect": string;
    status: OrderStatus;
    cancellable: boolean;
    editable: boolean;
    edited: boolean;
    "received-at": string;
    "updated-at": number;
    legs: Leg[];
}

export interface Leg {
    "instrument-type": string;
    symbol: string;
    quantity: number;
    "remaining-quantity": number;
    action: string;
    fills: any[];
}

export interface Warning {
    code: string;
    message: string;
}
